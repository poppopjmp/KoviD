name: "Build"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: [ "5.10", "5.15", "6.0" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Packages
        run: |
          sudo apt-get update
          sudo apt-get install --yes build-essential linux-headers-generic linux-kernel-headers
          sudo apt-get install --yes cmake
          sudo apt-get install --yes g++
          sudo apt-get install --yes python3-pip
          sudo apt-get install --yes libslirp-dev
          sudo apt-get install --yes qemu-system-x86
          sudo apt-get install --yes netcat-traditional
          sudo apt-get install --yes nmap
          sudo apt-get install --yes socat
          sudo bash -c "$(wget -O - https://apt.llvm.org/llvm.sh)"
          pip3 install lit
          sudo ln -s ~/.local/bin/lit /usr/bin/llvm-lit
          sudo apt-get install llvm-18-dev
          sudo apt-get install llvm-18-tools
          sudo apt-get install clang-format-18
          if [ "${{ matrix.version }}" == "5.10" ]; then
            sudo apt-get install --yes linux-headers-5.10.0-1050-azure
          elif [ "${{ matrix.version }}" == "5.15" ]; then
            sudo apt-get install --yes linux-headers-5.15.0-1050-azure
          elif [ "${{ matrix.version }}" == "6.0" ]; then
            sudo apt-get install --yes linux-headers-6.0.0-1050-azure
          fi

      - name: Check code formatting with clang-format
        run: |
          clang-format-18 --version

          clang-format-18 -i src/*.c
          clang-format-18 -i src/*.h

          # Fail if the code got reformatted
          git diff --exit-code

      - name: Build and Run tests
        run: |
          mkdir build && cd build
          cmake -DKOVID_LINUX_VERSION=${{ matrix.version }} ..
          make PROCNAME="myprocname" TEST_ENV=1
          make check-kovid -j1
